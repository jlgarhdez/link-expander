// Generated by CoffeeScript 1.6.2
/**
* @author José Luis García <jlgarcia.me>
* @license MIT <https://raw.github.com/jlgarhdez/link-expander/master/LICENSE>
*/


(function() {
  var expandLink, nextImageClick, pasteHandler, previousImageClick, textarea;

  textarea = document.getElementById('textarea');

  pasteHandler = function(event) {
    var data, pattern;

    pattern = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!-\/]))?/;
    data = event.clipboardData.getData('text/plain');
    if (pattern.test(data)) {
      expandLink(data);
    }
    return this;
  };

  textarea.addEventListener('paste', pasteHandler, false);

  expandLink = function(url) {
    var xhr;

    xhr = new XMLHttpRequest;
    xhr.open("GET", "expander.php?url=" + url, true);
    xhr.onreadystatechange = function(e) {
      var container, description, expandedInfo, flag, image, imageUrl, imagesDiv, link, nextImage, previousImage, response, title, _i, _len, _ref;

      if (xhr.readyState === 4) {
        response = JSON.parse(xhr.responseText);
        expandedInfo = document.createElement('div');
        expandedInfo.setAttribute('class', 'expanded-info');
        link = document.createElement('a');
        link.setAttribute('href', url);
        link.innerHTML = response.title;
        title = document.createElement('div');
        title.setAttribute('class', 'title');
        title.appendChild(link);
        description = document.createElement('div');
        description.setAttribute('class', 'description');
        description.innerHTML = response.description;
        imagesDiv = document.createElement('div');
        imagesDiv.setAttribute('id', 'images');
        imagesDiv.setAttribute('style', 'width:150px;overflow:hidden;float: right;');
        flag = 0;
        _ref = response.images;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          imageUrl = _ref[_i];
          image = document.createElement('img');
          image.setAttribute('src', imageUrl);
          if (flag++ !== 0) {
            image.style.display = 'none';
            image.setAttribute('class', 'image');
          } else {
            image.setAttribute('class', 'active image');
          }
          image.setAttribute('id', "image" + flag);
          imagesDiv.appendChild(image);
        }
        nextImage = document.createElement('div');
        nextImage.setAttribute('class', 'arrow btn next-image');
        nextImage.innerHTML = '&rarr;';
        nextImage.onclick = nextImageClick;
        previousImage = document.createElement('div');
        previousImage.setAttribute('class', 'arrow btn previous-image');
        previousImage.innerHTML = '&larr;';
        previousImage.onclick = previousImageClick;
        if (response.images.length > 0) {
          imagesDiv.appendChild(previousImage);
          imagesDiv.appendChild(nextImage);
        }
        expandedInfo.appendChild(title);
        expandedInfo.appendChild(description);
        expandedInfo.appendChild(imagesDiv);
        expandedInfo.style.display = 'block';
        container = document.getElementsByClassName('container')[0];
        return container.appendChild(expandedInfo);
      }
    };
    return xhr.send(null);
  };

  nextImageClick = function(event) {
    var activeImage, activeImageId, nextImage, nextImageId;

    activeImage = document.getElementsByClassName('active').item(0);
    activeImageId = activeImage.id.charAt(activeImage.id.length - 1);
    nextImageId = "image" + (++activeImageId);
    nextImage = document.getElementById(nextImageId);
    if (nextImage !== null) {
      nextImage.setAttribute('class', 'active image');
      nextImage.style.display = 'block';
      activeImage.setAttribute('class', 'image');
      activeImage.style.display = 'none';
    }
    return this;
  };

  previousImageClick = function(event) {
    var activeImage, activeImageId, previousImage, previousImageId;

    activeImage = document.getElementsByClassName('active').item(0);
    activeImageId = activeImage.id.charAt(activeImage.id.length - 1);
    previousImageId = "image" + (--activeImageId);
    previousImage = document.getElementById(previousImageId);
    if (previousImage !== null) {
      previousImage.setAttribute('class', 'active image');
      previousImage.style.display = 'block';
      activeImage.setAttribute('class', 'image');
      activeImage.style.display = 'none';
    }
    return this;
  };

}).call(this);
